{"version":3,"file":"static/js/680.487f0b6c.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZDNmNzE5ZWMwNGJmZjRkZGMzYWE5ZjZlMmRjNGQ5ZSIsInN1YiI6IjY0YTA0MDEwODFkYTM5MDEwYjhhZGNiNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.B-flHJ2qqW-7IKxqsY5Y_9NJ4QXIkPDtLv4GMti5oH8';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_KEY,\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(\n    `${BASE_URL}/trending/movie/day?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const getSearchMovies = async searchText => {\n  const { data } = await axios(\n    `${BASE_URL}/search/movie?query=${searchText}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(\n    `${BASE_URL}/movie/${movieId}?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios(\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderOverlay\":\"Loader_loaderOverlay__UJo-J\"};","import React from 'react'\nimport  { TailSpin }  from  'react-loader-spinner'\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n        return (\n          <div className={css.loaderOverlay}> \n            <TailSpin\n              height=\"80\"\n              width=\"80\"\n              color=\"#4fa94d\"\n              ariaLabel=\"tail-spin-loading\"\n              radius=\"1\"\n              wrapperStyle={{position: 'absolute', top: '30%', left: '43%'}}\n              wrapperClass=\"tail-spin-loading\"\n              visible={true}\n            />\n          </div>\n        ) \n}\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"movies__card\":\"MovieCard_movies__card__UMR+v\",\"movies__card-photo\":\"MovieCard_movies__card-photo__zQa+f\",\"movies__card-title\":\"MovieCard_movies__card-title__cewWp\",\"movies__card-genres\":\"MovieCard_movies__card-genres__YsliN\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MovieCard.module.css'\n\nconst MovieCard = ({movie}) => {\n    const {id, title, poster_path, release_date} = movie\n    const locationMovie = useLocation()\n    // const backLinkHref = useRef(locationMovie.state?.from ?? '/');\n    \n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\n    return ( \n    <li key={id} id={id} className={css['movies__card']}>\n        <Link to={`/movies/${id}`} state={locationMovie}>\n            <img\n                className={css['movies__card-photo']}\n                src={\n                    poster_path \n\t\t\t\t\t\t? `https://image.tmdb.org/t/p/w500${poster_path}`\n\t\t\t\t\t\t: defaultImg\n                }\n                alt={title}\n                loading=\"lazy\"\n                width=\"395px\"\n                height=\"574px\"\n            />\n            <h2 className={css['movies__card-title']}>{title}</h2>\n            <p className={css['movies__card-genres']}>{release_date}</p>\n        </Link>\n    </li>\n    );\n}\n \nexport default MovieCard","// extracted by mini-css-extract-plugin\nexport default {\"movies__list\":\"MoviesList_movies__list__omDb8\"};","import MovieCard from 'components/MovieCard/MovieCard';\nimport React from 'react';\nimport css from './MoviesList.module.css'\n\nconst MoviesList = ({movies}) => {\n    return ( \n        <ul className={css['movies__list']}>\n            {movies &&\n                movies.map((movie) => (\n                <MovieCard \n                    movie={movie}\n                />\n            ))}\n        </ul>\n    );\n}\n \nexport default MoviesList;","import React, {useState, useEffect} from \"react\"\nimport { getTrendingMovies } from '../../api/movies'\nimport Loader from '../../components/Loader/Loader'\nimport Notiflix from 'notiflix';\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState(null)\n\tconst [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        const getData = async () => {\n\t\t\ttry {\n\t\t\t\tsetIsLoading(true)\n\t\t\t\tconst {results} = await getTrendingMovies()\n                if ( results.length > 0 ) {\n\t\t\t\t\tNotiflix.Notify.success(\n\t\t\t\t\t\t`Hooray! We found ${results.length} trending movies.`,\n\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t\t// console.log('results :>> ', results)\n\t\t\t\tsetMovies(results)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('error :>> ', error)\n\t\t\t} finally {\n                setIsLoading(false)\n            }\n\t\t}\n\t\tgetData()\n    }, []);\n    return (\n    <>\n        {isLoading && <Loader />}\n        <MoviesList movies={movies}/>\n    </>\n)}\n\nexport default HomePage;"],"names":["BASE_URL","options","method","headers","accept","Authorization","getTrendingMovies","axios","data","getSearchMovies","searchText","getMovieDetails","movieId","getMovieCredits","getMovieReviews","className","css","height","width","color","ariaLabel","radius","wrapperStyle","position","top","left","wrapperClass","visible","movie","id","title","poster_path","release_date","locationMovie","useLocation","to","state","src","alt","loading","movies","map","useState","setMovies","isLoading","setIsLoading","useEffect","getData","results","length","Notiflix","console","log"],"sourceRoot":""}