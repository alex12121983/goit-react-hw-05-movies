{"version":3,"file":"static/js/464.10d6d193.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZDNmNzE5ZWMwNGJmZjRkZGMzYWE5ZjZlMmRjNGQ5ZSIsInN1YiI6IjY0YTA0MDEwODFkYTM5MDEwYjhhZGNiNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.B-flHJ2qqW-7IKxqsY5Y_9NJ4QXIkPDtLv4GMti5oH8';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_KEY,\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(\n    `${BASE_URL}/trending/movie/day?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const getSearchMovies = async searchText => {\n  const { data } = await axios(\n    `${BASE_URL}/search/movie?query=${searchText}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios(\n    `${BASE_URL}/movie/${movieId}?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios(\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(\n    `${BASE_URL}/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderOverlay\":\"Loader_loaderOverlay__UJo-J\"};","import React from 'react'\nimport  { TailSpin }  from  'react-loader-spinner'\nimport css from './Loader.module.css'\n\nconst Loader = () => {\n        return (\n          <div className={css.loaderOverlay}> \n            <TailSpin\n              height=\"80\"\n              width=\"80\"\n              color=\"#4fa94d\"\n              ariaLabel=\"tail-spin-loading\"\n              radius=\"1\"\n              wrapperStyle={{position: 'absolute', top: '30%', left: '43%'}}\n              wrapperClass=\"tail-spin-loading\"\n              visible={true}\n            />\n          </div>\n        ) \n}\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"movies__card\":\"MovieCard_movies__card__UMR+v\",\"movies__card-photo\":\"MovieCard_movies__card-photo__zQa+f\",\"movies__card-title\":\"MovieCard_movies__card-title__cewWp\",\"movies__card-genres\":\"MovieCard_movies__card-genres__YsliN\"};","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport css from './MovieCard.module.css'\n\nconst MovieCard = ({movie}) => {\n    const {id, title, poster_path, release_date} = movie\n    const location = useLocation()\n    // const backLinkHref = useRef(locationMovie.state?.from ?? '/');\n    \n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\n    return ( \n    <li id={id} key={id} className={css['movies__card']}>\n        <Link to={`/movies/${id}`} state={{from: location}}>\n            <img\n                className={css['movies__card-photo']}\n                src={\n                    poster_path \n\t\t\t\t\t\t? `https://image.tmdb.org/t/p/w500${poster_path}`\n\t\t\t\t\t\t: defaultImg\n                }\n                alt={title}\n                loading=\"lazy\"\n                width=\"395px\"\n                height=\"574px\"\n            />\n            <h2 className={css['movies__card-title']}>{title}</h2>\n            <p className={css['movies__card-genres']}>{release_date}</p>\n        </Link>\n    </li>\n    );\n}\n \nexport default MovieCard\n\nMovieCard.propTypes = {\n\tmovie: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            poster_path: PropTypes.string,\n            release_date: PropTypes.string.isRequired,\n\t\t  \tid: PropTypes.number.isRequired,\n\t\t}).isRequired,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movies__list\":\"MoviesList_movies__list__omDb8\"};","import React from 'react'\nimport MovieCard from 'components/MovieCard/MovieCard'\nimport PropTypes from 'prop-types'\nimport css from './MoviesList.module.css'\n\nconst MoviesList = ({movies}) => {\n    return ( \n        <ul className={css['movies__list']}>\n            {movies?.map((movie) => (\n                <MovieCard key={movie.id} movie={movie}/>\n            ))}\n        </ul>\n    );\n}\n \nexport default MoviesList\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string,\n        release_date: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n      }).isRequired\n    ),\n  }\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMovie_form__wxS1-\",\"input-group\":\"SearchMovie_input-group__bEzd+\",\"input\":\"SearchMovie_input__3IbmL\",\"input_button\":\"SearchMovie_input_button__amGjo\"};","import React, { useState } from 'react'\nimport Notiflix from 'notiflix'\nimport PropTypes from 'prop-types'\nimport css from './SearchMovie.module.css'\nimport searchImg from \"../../images/search_ico.png\"\n\nconst SearchMovie = ({handleSearch}) => {\n    const [value, setValue] = useState('')\n\n    const handleChange = ({ target: { value } }) => {\n        setValue(value)\n    }\n\n    const handleSubmit = (evt) => {\n\n        evt.preventDefault()\n\n        if (value.trim() === '') {\n            return Notiflix.Notify.warning(\n              'Please enter key words for search.',\n            );\n          }\n\n        handleSearch(value)\n\n    }\n\n    return ( \n            <form className={css.form} onSubmit={handleSubmit}>\n                <div className={css['input-group']}>\n                    <input\n                        className={css.input}\n                        type=\"form-control\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movie\"\n                        name=\"search\"\n                        aria-describedby=\"button-addon2\"\n                        onChange={handleChange}\n                        value={value}\n                        required\n                    />\n                    <button type=\"submit\" className={css['input_button']}>\n                        <img src={searchImg} alt=\"search\" />\n                    </button>\n                </div>\n            </form>\n     );\n}\n \nexport default SearchMovie\n\nSearchMovie.propTypes = {\n    handleSearch: PropTypes.func.isRequired,\n  }","import React, {useState, useEffect} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Notiflix from 'notiflix';\n\nimport { getSearchMovies } from '../../api/movies'\n\nimport Loader from '../../components/Loader/Loader'\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n    const [searchParams, setSearchParams] = useSearchParams()\n    const searchText = searchParams.get('query')\n    const [isLoading, setIsLoading] = useState(false)\n\tconst [movies, setMovies] = useState(null)\n    const [error, setError] = useState(null)\n\n    const handleSearch = (value) => {\n        const text = value.trim() \n        setSearchParams({\n            query: text,\n          });\n    }\n\n    useEffect(() => {\n       const getData = async () => {\n        try {\n            setIsLoading(true)\n\n            if(!searchText) return;\n            \n            const {results} = await getSearchMovies(searchText)\n\n            if ( results.length === 0 ) {\n                Notiflix.Notify.failure(\n                    'Sorry, there are no movies matching your search query. Please try again.',\n                  )\n                  setMovies(null)\n                  return;\n                } else {\n                    Notiflix.Notify.success(\n\t\t\t\t\t\t`Hooray! We found ${results.length} movies.`,\n\t\t\t\t\t  )\n                    // console.log('results :>> ', results)\n                    setMovies(results)\n                }\n            \n        } catch (error) {\n            setError(error.message)\n\t\t\tconsole.log('error :>> ', error)\n        } finally {\n\t\t\tsetIsLoading(false)\n\t\t}\n    }\n    getData() \n    }, [searchText]);\n\n    return ( \n    <>\n        <SearchMovie handleSearch={handleSearch}/>\n        {isLoading && <Loader />}\n        {error !== null && (\n\t\t\t<p className=\"c-error\">\n\t\t\t\tOops, some error occured. Please, try again later. Error: {error}\n\t\t\t</p>\n\t\t)}\n        {movies && <MoviesList movies={movies}/>}\n    </> \n    );\n}\n \nexport default MoviesPage"],"names":["BASE_URL","options","method","headers","accept","Authorization","getTrendingMovies","axios","data","getSearchMovies","searchText","getMovieDetails","movieId","getMovieCredits","getMovieReviews","className","css","height","width","color","ariaLabel","radius","wrapperStyle","position","top","left","wrapperClass","visible","movie","id","title","poster_path","release_date","location","useLocation","to","state","from","src","alt","loading","movies","map","handleSearch","useState","value","setValue","onSubmit","evt","preventDefault","trim","Notiflix","type","autoComplete","autoFocus","placeholder","name","onChange","target","required","useSearchParams","searchParams","setSearchParams","get","isLoading","setIsLoading","setMovies","error","setError","useEffect","getData","results","length","message","console","log","text","query","Loader","MoviesList"],"sourceRoot":""}